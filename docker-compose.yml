
version: '3.8'

services:
  pocketserver:
    build:
      context: . # Build from the Dockerfile in the current directory
      dockerfile: Dockerfile
    container_name: pocketserver_app
    restart: unless-stopped
    ports:
      - "9002:9002" # Map host port 9002 to container port 9002
    environment:
      - PORT=9002 # Ensure Next.js runs on the correct port inside the container
      # Add any other environment variables needed by PocketServer here
      # e.g., - GOOGLE_GENAI_API_KEY=${GOOGLE_GENAI_API_KEY}
    networks:
      - monitoring_net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_monitor
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml # Mount Prometheus config
      - prometheus_data:/prometheus # Persistent volume for metrics data
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle' # Allows reloading config via API call
    ports:
      - "9090:9090" # Expose Prometheus UI
    networks:
      - monitoring_net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana_dashboard
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana # Persistent volume for Grafana data/dashboards
      # You can add provisioning files for datasources/dashboards here later:
      # - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "3000:3000" # Expose Grafana UI (default user/pass: admin/admin)
    depends_on:
      - prometheus # Wait for Prometheus to be available
    environment:
      # - GF_SECURITY_ADMIN_USER=admin # Optional: Change default admin user
      # - GF_SECURITY_ADMIN_PASSWORD=your_strong_password # Optional: Change default admin password
      - GF_USERS_ALLOW_SIGN_UP=false # Disable Grafana user sign up
      # Environment variables to auto-configure Prometheus datasource (optional)
      - GF_DATASOURCES_DEFAULT_NAME=Prometheus
      - GF_DATASOURCES_DEFAULT_TYPE=prometheus
      - GF_DATASOURCES_DEFAULT_URL=http://prometheus:9090
      - GF_DATASOURCES_DEFAULT_ACCESS=proxy
      - GF_DATASOURCES_DEFAULT_IS_DEFAULT=true
    networks:
      - monitoring_net

  # Optional: node-exporter for system metrics
  # node-exporter:
  #   image: prom/node-exporter:latest
  #   container_name: node_exporter
  #   restart: unless-stopped
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.rootfs=/rootfs'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
  #   ports:
  #     - "9100:9100" # Expose node-exporter metrics
  #   networks:
  #     - monitoring_net

networks:
  monitoring_net:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}

# Remember to create a .env file locally if you add environment variables like GOOGLE_GENAI_API_KEY
# docker-compose will automatically pick it up.
# For GitLab CI, configure these secrets as CI/CD variables.
```